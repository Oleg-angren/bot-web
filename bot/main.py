import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.filters import Command
from aiogram.types import Message
from aiohttp import web
import os

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –∏ URL
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω")

# –§–æ—Ä–º–∏—Ä—É–µ–º URL: RENDER_EXTERNAL_HOSTNAME —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç .onrender.com
RENDER_EXTERNAL_HOSTNAME = os.getenv("RENDER_EXTERNAL_HOSTNAME")
if RENDER_EXTERNAL_HOSTNAME:
    WEBHOOK_URL = f"https://{RENDER_EXTERNAL_HOSTNAME}"
else:
    WEBHOOK_URL = "http://localhost:8000"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞
APP_HOST = "0.0.0.0"
APP_PORT = int(os.getenv("PORT", 10000))

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot=bot)  # ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º –±–æ—Ç–∞ –≤ –¥–∏—Å–ø–µ—Ç—á–µ—Ä

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("üöÄ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –≤–µ–±-—Ä–µ–∂–∏–º–µ –Ω–∞ Render!")

# –≠—Ö–æ
@dp.message()
async def echo(message: Message):
    await message.answer(f"–¢—ã —Å–∫–∞–∑–∞–ª: {message.text}")

# –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞
async def on_startup(app):
    webhook_url = f"{WEBHOOK_URL}/webhook"
    await bot.set_webhook(webhook_url)
    logger.info(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

async def on_shutdown(app):
    await bot.delete_webhook()
    await bot.session.close()
    logger.info("üí§ Webhook —É–¥–∞–ª—ë–Ω, —Å–µ—Å—Å–∏—è –±–æ—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∞")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–µ–±—Ö—É–∫–∞
async def handle_webhook(request):
    try:
        update = await request.json()
        await dp.feed_update(update)  # ‚úÖ –¢–æ–ª—å–∫–æ update
        return web.Response(status=200)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–µ–±—Ö—É–∫–∞: {e}")
        return web.Response(status=500)

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
app = web.Application()
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)
app.router.add_post("/webhook", handle_webhook)

# Health check
async def health_check(request):
    return web.Response(text="OK", content_type="text/plain")

app.router.add_get("/", health_check)

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    logger.info(f"üåç –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ http://{APP_HOST}:{APP_PORT}")
    web.run_app(app, host=APP_HOST, port=APP_PORT)
